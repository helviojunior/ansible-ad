---
- hosts: all
  gather_facts: false
  vars_files:
    - vars.yml

  vars:
    ansible_python_interpreter: "/usr/bin/python3"

  tasks:
  - name: Add new PDC to Ansible Hosts
    add_host:
      name: '{{ dc_address }}'
      ansible_connection: winrm
      ansible_winrm_transport: ntlm
      ansible_winrm_server_cert_validation: ignore
      ansible_winrm_port: 5986
      group: "ad"

- hosts: "ad"
  gather_facts: false
  vars_files:
    - vars.yml

  vars:
    ansible_python_interpreter: "/usr/bin/python3"
    dc_creds: &dc_creds
      domain_password: '{{ ansible_password }}'
      domain_username: '{{ ansible_user }}'
      domain_server: '{{ dc_address }}'

  tasks:
  - name: Wait for system to become reachable over new ip
    wait_for_connection:
      timeout: 900

  - name: Ensure a server is a domain controller
    ansible.windows.win_domain_controller:
      dns_domain_name: '{{ domain_name }}'
      domain_admin_user: '{{ ansible_user + "@" + domain_name }}'
      domain_admin_password: '{{ ansible_password }}'
      safe_mode_password: '{{ ansible_password }}'
      state: domain_controller
    register: ad_data

  - name: Create object structure
    populate_ad:
      user: 5000
      group: 200
      ou: 50
      domain_admins: 10
      spn: 50
      company_name: '{{ company_name }}'
    connection: local
    register: ad_new_objects
    delegate_to: localhost

  - name: Get default OU 'computers'
    community.windows.win_domain_ou:
      <<: *dc_creds
      name: 'computers'
      state: present
    register: computers_ou
    ignore_errors: true
    retries: 5
    delay: 10
    until: computers_ou['path'] is defined and computers_ou['path'][0] is defined and computers_ou['path'][0] != ''

  - name: Get root DN
    set_fact:
      root_dn: "{{ computers_ou['path'][0] | string }}"

  - debug: msg="{{ root_dn }}"

  - name: Create/update OU 'groups'
    community.windows.win_domain_ou:
      <<: *dc_creds
      name: 'groups'
      path: '{{ root_dn }}'
      state: present
    retries: 5
    delay: 10
    register: groups_ou
    until: groups_ou['ou'] is defined and groups_ou['ou']['DistinguishedName'] is defined and groups_ou['ou']['DistinguishedName'] != ''

  - name: Get OU groups DN
    set_fact:
      groups_dn: "{{ groups_ou['ou']['DistinguishedName'] }}"

  - name: Ensure OU
    community.windows.win_domain_ou:
      <<: *dc_creds
      name: 'OUs'
      path: '{{ root_dn }}'
      state: present
    register: base_ou
    retries: 5
    delay: 10
    until: base_ou['ou'] is defined and base_ou['ou']['DistinguishedName'] is defined and base_ou['ou']['DistinguishedName'] != ''

  - name: Get OU base DN
    set_fact:
      ou_base_dn: "{{ base_ou['ou']['DistinguishedName'] }}"

  - name: Create/update all OUs
    community.windows.win_domain_ou:
      <<: *dc_creds
      name: '{{ item }}'
      path: '{{ ou_base_dn }}'
      state: present
    loop: "{{ ad_new_objects['data']['ou'] | list }}"
    retries: 3
    delay: 15
    register: result
    until: result is succeeded

  - name: Create/update all groups
    community.windows.win_domain_group:
      <<: *dc_creds
      scope: global
      name: '{{ item }}'
      path: '{{ groups_dn }}'
      state: present
    loop: "{{ ad_new_objects['data']['group'] | list }}"
    retries: 3
    delay: 15
    register: result
    until: result is succeeded

  - name: Create Users
    community.windows.win_domain_user:
      <<: *dc_creds
      name: '{{ item.name }}'
      password: '{{ item.passwd }}'
      state: present
      path: '{{ "OU=" + item.ou + "," + ou_base_dn }}'
      groups: '{{ item.member_of | list }}'
      password_never_expires: true
    loop: "{{ ad_new_objects['data']['user'] | list }}"
    retries: 3
    delay: 15
    register: result
    until: result is succeeded

  - name: Update Users SPN
    community.windows.win_domain_user:
      <<: *dc_creds
      name: '{{ item.name }}'
      spn: '{{ item.spn }}'
    loop: "{{ ad_new_objects['data']['spn'] | list }}"
    retries: 3
    delay: 15
    register: result
    until: result is succeeded

